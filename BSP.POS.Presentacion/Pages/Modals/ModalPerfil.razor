@inject IUsuariosInterface UsuariosService
@inject AuthenticationStateProvider AuthenticationStateProvider
<head>
    <link href="css/modalPerfil.css" rel="stylesheet" type="text/css" />
</head>
<div id="modal" class="modal" style='display: @(ActivarModal ? "block" : "none")'>
    <div class="modal-content">

        <div class="modal-header d-flex justify-content-center text-primary">
            <h2>Perfil <i class="fa-solid fa-user fa-xl"></i></h2>
        </div>

        <div class="modal-body d-flex row g-2 text-center">
            <div class="d-flex justify-content-center">
                <label class="col-md-2 mt-2 text-primary" for="correo">Correo:</label>
                <input value="@perfil.correo" class="col-md-2 border border-success rounded-pill px-2 text-success" type="text" id="correo" @oninput="CambioCorreo" />
            </div>
            <div class="d-flex justify-content-center">
                <label class="col-md-2 mt-2 text-primary" for="usuario">Usuario:</label>
                <input value="@perfil.usuario" class="col-md-2 border border-success rounded-pill px-2 text-success" type="text" id="usuario" @oninput="CambioUsuario" />
            </div>
            <div class="d-flex justify-content-center">
                <label class="col-md-2 mt-2 text-primary" for="contraseña">Contraseña:</label>
                <input class="col-md-2 border border-success rounded-pill px-2 text-success" type="password" id="contraseña" @oninput="CambioClave" />
            </div>
            <div class="d-flex justify-content-center">
                <label class="col-md-2 mt-2 text-primary" for="empresa">Empresa:</label>
                <input value="@perfil.nombre" class="col-md-2 border border-success rounded-pill px-2 text-success" type="text" id="empresa" @oninput="CambioNombreEmpresa" />
            </div>
            <div class="d-flex justify-content-center">
                <label class="col-md-2 mt-2 text-primary" for="tipo">Tipo:</label>
                <select @bind="perfil.rol" class="col-md-2 border border-success rounded-pill bg-success text-light px-2" id="tipo" @oninput="CambioRol">
                    <option value="C">Consultor</option>
                    <option value="A">Administrador</option>
                </select>
            </div>
        </div>
        <div class="modal-footer">
            <button @onclick="() => CloseModal()" class="rounded-pill border border-primary bg-primary text-light" id="descartar">Descartar cambios</button>
            <button @onclick="() => ActualizarPerfil()" class="rounded-pill border border-success bg-success text-light" id="guardar">Guardar cambios</button>
        </div>
    </div>
</div>

@code {


        [Parameter] public bool ActivarModal { get; set; } = false;
        [Parameter] public EventCallback<bool> OnClose { get; set; }
    public string Usuario { get; set; } = string.Empty;
    public mPerfil perfil { get; set; } = new mPerfil();
    public string tipo { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {

        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;
        Usuario = user.Identity.Name;
        await UsuariosService.ObtenerPerfil(Usuario);

        perfil = UsuariosService.Perfil;



    }

    private void CambioUsuario(ChangeEventArgs e)
    {
        if (!string.IsNullOrEmpty(e.Value.ToString()))
        {
            perfil.usuario = e.Value.ToString();
        }
    }
        private void CambioClave(ChangeEventArgs e)
    {
        if (!string.IsNullOrEmpty(e.Value.ToString()))
        {
            perfil.clave = e.Value.ToString();
        }
    }
        private void CambioCorreo(ChangeEventArgs e)
    {
        if (!string.IsNullOrEmpty(e.Value.ToString()))
        {
            perfil.correo = e.Value.ToString();
        }
    }
        private void CambioRol(ChangeEventArgs e)
    {
        if (!string.IsNullOrEmpty(e.Value.ToString()))
        {
            perfil.rol = e.Value.ToString();
        }
    }
    private void CambioNombreEmpresa(ChangeEventArgs e)
    {
        if (!string.IsNullOrEmpty(e.Value.ToString()))
        {
            perfil.nombre = e.Value.ToString();
        }
    }

    private async Task ActualizarPerfil()
    {

        await UsuariosService.ActualizarPefil(perfil);
        await UsuariosService.ObtenerPerfil(perfil.usuario);
        if (UsuariosService.Perfil != null)
        {
            perfil = UsuariosService.Perfil;
        }
        await CloseModal();
    }
    private void OpenModal()
    {
        ActivarModal = true;
    }

    private async Task CloseModal()
    {
        await UsuariosService.ObtenerPerfil(Usuario);
        perfil = UsuariosService.Perfil;
        await OnClose.InvokeAsync(false);

    }

}
