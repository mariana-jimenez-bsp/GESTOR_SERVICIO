@page "/login"
@inject IUsuariosInterface UsuariosService
@inject ILocalStorageService localStorageService
@inject NavigationManager navigationManager
<head>
    <link href="css/login.css" rel="stylesheet" type="text/css" />
</head>
        <div class="container container-full">
            <div class="row">
                <div class="col-md-7 columna">
                    <div class="columna-left-imagen"></div>
                    <footer class="d-flex justify-content-center p-3 bg-success w-100 text-light">Todos los derechos reservados, 2023</footer>
                </div>
                <div class="col-md-5 columna columna-right-imagen">
                    <div class="text-center">
                        <div class="semicircle"></div>
                        <h1 class="text-light"> Gestor de servicio</h1>
                        <h3 class="text-light">Ingrese su información</h3>
                        <div class="form-group d-flex align-items-center">
                            <i class="fa-solid fa-envelope text-success bg-light p-2"></i>
                    <input placeholder="Usuario..." type="text" class="form-control text-success" @oninput="ValorUsuario" required />
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <i class="fa-solid fa-lock text-success bg-light p-2"></i>
                    <input placeholder="Contraseña..." type="password" class="form-control text-success" @oninput="ValorClave" required />
                        </div>


                        <button class="btn btn-success btn-block" @onclick="Ingresar">Ingresar</button>
                        <p class="mt-5 text-light">¿Olvidó su contraseña?</p>
                        <a class="text-success">Resetear contraseña</a>
                    </div>
                </div>
            </div>
        </div>
@code {
    private string usuario { get; set; } = string.Empty;
    private string contrasena { get; set; } = string.Empty;
    private string valorSesion { get; set; } = string.Empty;
    private string mensaje { get; set; } = string.Empty;
    public mLogin usuarioLogin { get; set; } = new mLogin();
    protected override void OnParametersSet()
    {


        if (usuarioLogin != null)
        {
            UsuariosService.UsuarioLogin = usuarioLogin;
            Console.WriteLine(usuarioLogin.usuario);
        }
    }
    private async Task Ingresar()
    {
        if (inputUsuario != null && inputClave != null)
        {

            usuarioLogin = await UsuariosService.RealizarLogin(inputUsuario, inputClave);
            if (usuarioLogin != null)
            {
                await localStorageService.SetItemAsync<string>("token",usuarioLogin.token);
                navigationManager.NavigateTo("/index");
            }

        }
    }

    private string inputUsuario { get; set; } = string.Empty;
    private string inputClave { get; set; } = string.Empty;

    private void ValorUsuario(ChangeEventArgs e)
    {
        if (e.Value.ToString() != null)
        {
            inputUsuario = e.Value.ToString();
        }
    }

    


    private void ValorClave(ChangeEventArgs e)
    {
        if (e.Value.ToString() != null)
        {
            inputClave = e.Value.ToString();
        }
    }
}
