

@inject IProyectosInterface ProyectosService
@inject IItemsClienteInterface ItemsClienteService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager navigationManager
@inject IClientesInterface ClientesService
@inject IJSRuntime JSRuntime
@inject NavigationManager navigationManager
@inject SweetAlertService Swal;
@inject IAlertasInterface AlertasService
@if (cargaInicial)
{
    @if (permisos != null && permisos.Any(p => p.Contains("Proyectos")))
    {

        <div class="el-layout">
            <Layout Texto="RecibirTexto"></Layout>
        </div>
        
        <div class="width-content">
            <EditForm Model="@proyectos" OnValidSubmit="SwalActualizandoProyectos" OnInvalidSubmit="ActivarScrollBarDeErrores">
                <ObjectGraphDataAnnotationsValidator />

                
                <div class=" d-flex row g-2 text-center ">
                    <div class="container mt-1 border-transparent">

                        <div class="card-header row blue-dark-text text-16-medium" id="headings-proyects">
                            <div class="col-md-1">
                                <label class="text-center w-100" ># de Proyecto</label>
                            </div>
                            <div class="col-md-2">
                                <label class="pe-4 text-center w-100">Nombre de Proyecto</label>
                            </div>
                            <div class="col-md-2">
                                <label class=" text-center w-100" >Nombre de la empresa</label>
                            </div>
                            <div class="col-md-1">
                                <label class=" text-center w-100">Nombre del Consultor</label>
                            </div>
                            <div class="col-md-1">
                                <label class="pe-1 text-center w-100" >Fecha Inicial</label>
                            </div>
                            <div class="col-md-1">
                                <label class="pe-3 text-center w-100" >Fecha Final</label>
                            </div>
                            <div class="col-md-1">
                                <label class="pe-2 text-center w-100" >Horas Totales</label>
                            </div>
                            <div class="col-md-2">
                                <label class="pe-4 text-center w-100" >Centro de Costo</label>
                            </div>
                            <div class="col-md-1">
                                <label class="pe-4 text-center w-100">Acción</label>
                            </div>
                        </div>
                        <div class="max-height-projects overflow-y-auto overflow-x-hidden scrollbar-modal-projects">
                            @if (proyectos != null)
                            {
                                var listaDeProyectos = proyectos.OrderByDescending(p => p.numero).ToList();
                                if (!string.IsNullOrEmpty(textoRecibido))
                                {
                                    // Filtrar la lista de clientes por el nombre que contenga el texto de búsqueda
                                    listaDeProyectos = listaDeProyectos.Where(proyecto =>
                                    proyecto.nombre_proyecto.IndexOf(textoRecibido, StringComparison.OrdinalIgnoreCase) >= 0 ||
                                    listaCentrosDeCosto.Any(cc => cc.descripcion.IndexOf(textoRecibido, StringComparison.OrdinalIgnoreCase) >= 0 && proyecto.centro_costo == cc.valor) ||
                                    listaDeClientes.Any(c => c.NOMBRE.IndexOf(textoRecibido, StringComparison.OrdinalIgnoreCase) >= 0 && proyecto.codigo_cliente == c.CLIENTE)
                                    ).ToList();
                                }
                                @foreach (var proyecto in listaDeProyectos)
                                {
                                    <div class="card-header row text-secondary mb-3 mt-3 text-16-book">
                                        <div class="mb-0 col-md-1">

                                            <input class="w-100 text-center border-input-gray rounded-pill" type="text" @bind-value="@proyecto.numero" readonly>


                                        </div>
                                        <div class="mb-0  col-md-2">

                                            <input class="w-100 text-center border-input-gray rounded-pill me-2" type="text" @bind-value="@proyecto.nombre_proyecto" @oninput="(e) => CambioNombreProyecto(e, proyecto.Id)">
                                            <ValidationMessage For="@(() => proyecto.nombre_proyecto)" />
                                        </div>
                                        <div class="mb-0 col-md-2">
                                            <select class="w-100 text-center border-input-gray rounded-pill" @bind="proyecto.codigo_cliente" @oninput="(e) => CambioCodigoCliente(e, proyecto.Id)">
                                                @if (listaDeClientes.Any())
                                                {
                                                    foreach (var cliente in listaDeClientes)
                                                    {
                                                        <option value="@cliente.CLIENTE">@cliente.NOMBRE</option>
                                                    }
                                                }
                                            </select>
                                            <ValidationMessage For="@(() => proyecto.codigo_cliente)" />


                                        </div>
                                        <div class="mb-0 col-md-1">

                                            <input class="w-100 text-center border-input-gray rounded-pill" type="text" @bind-value="@proyecto.nombre_consultor" readonly>
  
                                        </div>
                                        <div class="mb-0 col-md-1">

                                            <input class="w-100 text-center border-input-gray rounded-pill" type="date" @bind-value="@proyecto.FechaInicialDateTime" @oninput="(e) => CambioFechaInicial(e, proyecto.Id)">
                                            <ValidationMessage For="@(() => proyecto.FechaInicialDateTime)" />
                                        </div>
                                        <div class="mb-0  col-md-1">

                                            <input class="w-100 text-center border-input-gray rounded-pill" type="date" @bind-value="@proyecto.FechaFinalDateTime" @oninput="(e) => CambioFechaFinal(e, proyecto.Id)">
                                            <ValidationMessage For="@(() => proyecto.FechaFinalDateTime)" />
                                        </div>
                                        <div class="mb-0  col-md-1">

                                            <input class="w-100 text-center border-input-gray rounded-pill" type="text" @bind-value="@proyecto.horas_totales" @oninput="(e) => CambioHorasTotales(e, proyecto.Id)">
                                            <ValidationMessage For="@(() => proyecto.horas_totales)" />
                                        </div>
                                        <div class="mb-0  col-md-2">
                                            <select class="w-100 text-center border-input-gray rounded-pill me-2" @bind="proyecto.centro_costo" @oninput="(e) => CambioCentroCosto(e, proyecto.Id)">
                                                @if (listaCentrosDeCosto.Any())
                                                {
                                                    foreach (var centro in listaCentrosDeCosto)
                                                    {
                                                        <option value="@centro.valor">@centro.descripcion</option>
                                                    }
                                                }
                                            </select>
                                            <ValidationMessage For="@(() => proyecto.centro_costo)" />
                                        </div>
                                        <div class="mb-0 col-md-1">

                                            <button type="button" class="green-bg rounded-pill px-2 text-light" @onclick='() => SwalTerminarProyecto("¿Está seguro de Terminar el proyecto #" + proyecto.numero + "?", proyecto.numero)'>Terminar</button>

                                        </div>
                                    </div>
                                }
                            }

                        </div>
                    </div>
                </div>
                <div class="footer-project text-13-medium">
                    <div @onclick="IrAProyectosTerminados" class="mouse-pointer rounded-pill border border-success green-add-bg text-light button-footer mx-5" id="proyectos-terminados">
                        Proyectos
                        Terminados
                    </div>
                    <div @onclick="() => IrAAgregarProyecto()" class="mouse-pointer rounded-pill border border-success green-add-bg text-light button-footer mx-5" id="agregar-proyectos">
                        Agregar
                        Proyecto
                    </div>
                    <div @onclick="DescartarCambios" class="mouse-pointer rounded-pill border border-primary blue-dark-bg text-light button-footer mx-5" id="descartar-proyectos">
                        Cancelar
                    </div>
                    <button type="submit" class="rounded-pill border border-input-gray bg-light button-footer green-text mx-5" id="guardar-proyectos">
                        Guardar
                        cambios
                    </button>
                </div>
            </EditForm>
        </div>
        
    }
    else


    {
        <RutaErronea mensaje="No tienes los permisos suficientes para entrar a esta página"></RutaErronea>
    }
    <ScriptMaxHeight Contenido=".max-height-projects" Elemento1=".el-layout" Elemento2=".footer-project" Elemento3=".card-header"></ScriptMaxHeight>
}
else
{
    <div class="loader">
        <p class="heading">Loading</p>
        <div class="loading">
            <div class="load"></div>
            <div class="load"></div>
            <div class="load"></div>
            <div class="load"></div>
        </div>
    </div>
}